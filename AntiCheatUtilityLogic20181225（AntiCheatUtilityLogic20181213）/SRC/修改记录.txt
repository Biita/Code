************************************************************
20121115
1.修改setup结构体内容
2.新增队列溢出检测标志，包括对轴重计算，车辆计算，发送队列的检测
3.动态秤标定
1)、弯板标定已改
2)、秤台标定已改
3)、分度设定不变
4)、静态修正不变
5)、动态修正已改
6)、量程设定不变
7)、弹性体高度已改
8)、缓坡长度已改
9)、车型修正已改
10)、静态秤标定不变
4.系统初始化已改


************************************************************
20121127
1、替换UI两个文件
2、替换w5100和w5100App四个文件
4、替换prtclWJ两个文件,TaskAnalysis两个文件
3、jzglobal文件内容修改
	g_pQDnList大小修改为4
	g_AxleInfo大小增加2
  新增speed1,speed2,speed3
  新增g_pSemTask6Param信号量
  新增TEMP_SIZE宏定义
 修改g_au8AllNetSendBuf[50000]为g_au8AllNetSendBuf[SENDALLSIZE] 
新增两宏
#define CHL_BUFLEN		512
#define CHL_BUFMASK		0x3FF
修改g_ChlData变量为g_ChlData[CHL_BUFLEN+2]
新增两宏
#define AXLE_BUFLEN		64 
#define AXLE_BUFMASK	0x3F
新增两宏
#define  VEHICLE_BUFLEN	 	16
#define  VEHICLE_BUFMASK	0x0F
修改g_vehicleInfo[VEHICLE_BUFLEN]

5、DEFConfig文件新增CHANNALROWSUM和CHANNALLINESUM两宏定义

新增宏定义
#define  	ErrAxleMsg		 "轴计算消息队列已满!" 
#define  	ErrSndPCMsg 		 "发送消息队列已满!"
#define 	ErrCalcVehMsg 		 "车辆计算消息队列已满!"
#define 	ErrShowVehMsg 		 "车辆显示消息队列已满!"
#define 	ErrShowAxleMsg 		 "轴显示消息队列已满!"

修改SETUPPARAMSIZE宏大小为5120
	RESERVED宏大小为5120
	SENDALLSIZE宏大小为100000
6、jzStructure文件中替换SetupParam结构体,新增TrigerID_Struct结构体,
修改Vehicle_Struct结构体成员n8accSpeed为n8accSpeed[ZHOUSIZE]

7、common文件中新增RootFloat方法

8、修改TDC256文件HISTORYBDADDR的地址值为0x1400
9、IP地址修改后，不能响应回复>>>>>


************************************************************
20121221
1.WT_TASK:
for (l_u32BR = 0;l_u32BR < CHANNELNUM; l_u32BR++)
	 {
		  g_an32MotionZero[l_u32BR]	= SETUPALIAS.an32Zero[l_u32BR];	
		  speed1[l_u32BR] = (SETUPALIAS.an8LengthPodu[l_u32BR]*POINTRATE*100+15*POINTRATE)/(RootFloat((SETUPALIAS.an8RoadPlaneHeight[l_u32BR]*POINTRATE*POINTRATE/4900)));
		  speed2[l_u32BR] = (SETUPALIAS.an8LengthPodu[l_u32BR]*POINTRATE*100)/(RootFloat((SETUPALIAS.an8RoadPlaneHeight[l_u32BR]*POINTRATE*POINTRATE/4900)));
		  speed3[l_u32BR] = speed2[l_u32BR]/2;
	 }
2.Task1中增加抓拍发数，修改协议中抓拍指令
3.串口5收激光数据，增加读FPGA时间
4.Task1中增加车辆结构体中车道编号


************************************************************
20121224
1.FPGA.c中断处理函数中：增加“减零点，乘增益”内容
2.发波形任务更改，需重新替换


************************************************************
20121225
1.逻辑按照昌金路窄条布局更改
2.激光函数文件WT_Task_LaserFunction更改
3.窄条函数文件WT_Task_ZTFunction.c更改
4.算法文件TaskAnalysis.c更改


************************************************************
20121226
1.重写发波形任务，波形格式略有不同，
2.新增两个消息队列，一为波形接收数据时使用，另一为波形任务发送给网口任务模块时的消息队列。
3.网口发送的消息队列有三类，一类为通信交互，一类为车辆数据，一类为波形数据。。波形数据的发送低于车辆数据，
当有车辆数据队列存在元素时，波形数据不发送。


************************************************************
20130104
此版程序在昌金路程序基础上更改，修改Task1中逻辑部分，修改激光和窄条函数文件
1.零点跟踪Task2中更改
2.更改串口5中断处理程序，98--66字节
3.激光车辆类型，00,01,10,11，Task1中修改判断内容
4.Task1中激光位置保持改为0x0C
5.Task1中针对激光数据处理部分，将测试逻辑部分注释，打开原有设计


************************************************************
20130106
1.重写TaskWave任务（王自峰）


************************************************************
20130107
1.Task2中，增加写零点部分
2.FPGA.h中增加零点跟踪定义
3.FPGA.h中增加上下秤阈值参数配置


************************************************************
20130108
1.GPIO.h中增加激光和相机IO，8个GPI，16个GPO管脚定义


************************************************************
20130110
1.Task4、6中，修改重量保存，重量/10，速度*10，一共3处，注释标识20130110
2.使用发波形功能时，（1）将OS_Q_QUERY_EN置1；（2）FPGA中断处理函数中打开发波形注释


************************************************************
20130111
1.OS_TICKS_PER_SEC改成200，最小分度5ms
2.UI界面增加UIBDSendWave()函数
3.PFGA中断处理函数增加发波形使能判断
  if( 1 == g_Setup.u8SendWaveEnable )


************************************************************
20130114
1.检测激光信号注意更改if( 0 == (g_u8DeviceERR[0] & 0x0F) )
2.逻辑任务激光检测移到前面
3.抓拍增加标志位
4.修改向上位机发送抓拍帧相关部分
5.增加LOGICENABLE使能开关，FPGA中断中，控制向逻辑抛窄条使能，如果为1，则向Task1抛窄条，为0，不抛
6.增加TESTLIGHT使能开关，测试IO点灯程序
7.增加DEBUGLASER使能开关，模拟激光测试程序	
8.修改抓拍置IO部分，回置部分


************************************************************
20130115
1.FPGA.h 模拟激光地址更改
2.信号量、数组大小更改：NETDATALEN  32
	NETDATA_BUFMASK	0x1F
  	TEMP_SIZE	32
	DNLISTNUM	64
	SENDLISTNUM	64
	OSQCreate初始化均改成SENDLISTNUM
	g_pSendList大小均改成SENDLISTNUM
3.Task6中修改  算法部分  注释为20130115


************************************************************
20130116
1 F_Sort函数排序更改  // revised by wangping donghao 20130116


************************************************************
20130121
1 FPGA初始化中注释掉开中断语句
  修改TaskStart中，OSTimeDly(20*OS_TICKS_PER_SEC)
  使得ARM和FPGA同时上电时，ARM有延时，可以进行零点跟踪
2 增加FPGALASER，表示FPGA模拟激光IO时使用，置1，使用FPGA模拟激光信号
  修改DEBUGLASER，表示激光串口组帧情况，置1，模拟组帧。注释掉在DEBUGLASER中检测IO的语句
3 Task6中，增加波形有效宽度，注释added by wangping 20130121


************************************************************
20130122
1 Task1中，进新车增加车辆ID，g_vehicleInfo[g_u8vehicleID].u8id = g_u8vehicleID
2 Task1中，增加g_u8VehPostCnt保护
	if( g_u8VehPostCnt > 0 )	   //增加保护 added by wujinlong 20130122
	{
		g_u8VehPostCnt--;
	}


************************************************************
20130415 周行
FPGA_APP.c
1、修改寄存器地址以适应verilog版FPGA逻辑。
2、增加读取温度寄存器函数。
3、增加复位FPGA函数.
4、增加读取版本函数。
5、删除零点跟踪功能


************************************************************
20130724 杨明
1.增加ARM与激光交互任务Task_Laser_Interact;主要负责处理接收到的激光被动应答命令和激光主动发送的数据；
2.在common.c文件中增加wj_Printf函数，同时结合Uart1.c文件中的sendchar函数，实现通过串口1格式化打印信息；
3.修改Uart5的中断接收函数，根据协议作出相应解析修改，并且将处理操作都转移到Task_Laser_Interact任务中；
4.修改TaskStart任务中的参数初始化逻辑，先从铁电中读取最近保存的参数，如果校验失败则初始化为默认参数；



************************************************************ 	
20130730 吴尽龙
1.将Retarget.c拷贝到\SRC\SYSTEM下，由于重复定义，注释掉fgetc、ferror、_ttywrch、_sys_exit等函数；



************************************************************ 	
20130731 吴尽龙
1.删除测试变量g_u8TestCnt1-9，为原程序测试内容；
2.程序版本维护：
  FPGA_APP.c	去除调试信息
  GPIO.h 		去除无用IO定义
  IRQ.c 		增加串口1初始化
  OS_CFG.H		开启统计任务
  AdjustMacro.h	增加激光指令宏定义
  prtclWJ.c		增加上位机-激光网口发送处理内容
  Common.c		增加wj_Printf、timer_set、timer_reset、timer_restart、timer_expired等函数
  WT_Task.c		去除FPGA模拟测试部分
  WT_Task_ZTFunction.c		注释掉：| g_ChlData[i].m_IsUsed



************************************************************ 	
20130805 吴尽龙
1. 增加系统初始化变量g_u8StartOver，系统初始化后，其他任务方可开始运行
2. 增加任务开始运行信息
3. 逻辑主框架中增加调试信息输出，逻辑中未添加


************************************************************ 	
20130806 吴尽龙
1. 协议计算总长度修改。增加F4代码g_Setup.u8SendF4CodeEnable的控制，计算分两步：（1）去除F4代码、CRC的长度，（2）增加F4代码长度
2. 注销掉键盘任务，开启键盘任务时序发生混乱，注销掉正常



************************************************************ 	
20130808 吴尽龙
1. 修正窄条行数由4改成3的问题，导致setup字节错位
	#if CHANNALLINESUM < 4
		uint16	u16DistBetweenNOuse[4-CHANNALLINESUM];	   	// 窄条行数发生变化，没有使用的行数 added by wujinlong 20130808
	#endif
2. setup中增加窄条间距数组u16DistBetw，存储窄条相对位置关系，并进行初始化


************************************************************ 	
20130809 吴尽龙
1 完成调试信息的串口输出
2 串口调试输出内容小于60个字符，缩减输出内容，控制每一帧长度；
3 增加互斥对象，保证只有一个任务的串口进行输出； 



************************************************************ 	
20130812 吴尽龙
1 增加串口调试信息输出任务



************************************************************ 	
20130815 吴尽龙
1 增加两方向车道数LANENUM_DERIC1、LANENUM_DERIC0，计算抓拍车道方便
2 增加线圈逻辑



************************************************************ 	
20130819 吴尽龙
1 增加网口发送端口设置
  端口5000	  重量帧0x81，与PC交互，包括激光参数设置等交互
  端口5001	  波形0xAA
  端口5002	  日志
  端口5003	  保留
2 删除调校协议：xyAdjust.h和xyAdjust.c



************************************************************ 	
20130821 吴尽龙
1 增加日志模块
2 修改测试系统串口5接收机制
3 修改发波形任务，每次首帧均发送增益和零点


************************************************************ 	
20130822 吴尽龙
1 增加模拟测试环境下不判激光状态
2 增加线圈逻辑开关


************************************************************ 	
20130826 吴尽龙
1 整合董浩程序



************************************************************ 	
20130910 吴尽龙
1 增加心跳，一定时间没有收到回复，且连续三次
#define	NET_HEARTBEAT_EN					0		// 网络心跳使能，20130904
2 保活机制
#define	NET_KEEPALIVE_EN					1		// 网络保活机制使能，20130910




************************************************************ 	
20130913 吴尽龙 董浩
1 修改函数F_LocateByLaserState中 确定左右窄条位置，增加bLFlag=1等


************************************************************ 	
20130916 吴尽龙 董浩
1 修改函数F_Union，增加l_bLengthOK=0;
2 增加l_u16XunhuanOrder=0
3 增加联轴抛轴时判断AdHereAxle是否为空，如果不为空，则进行拷贝
4 修改Wonder处理确定窄条归属后F_UpdataWbZtRecToRoute的输入参数，改为刚确定窄条的序号
	//l_sUpdataWbZtRecToRouteParas.p_nRecIX = l_pChlItem->u16SelfID;
	l_sUpdataWbZtRecToRouteParas.p_nRecIX = l_CRecoverWbZtRec.u16ID;


************************************************************ 	
20130924 吴尽龙 董浩
1 增加延时抛车，根据第1轴第1排窄条和最后一排窄条计算延时时间，需测试
2 如果窄条是同一排，增加判断，如果该窄条在当前轴出现，则归入AdHere里，modified by wujinlong donghao 20130924


************************************************************ 	
20130930 吴尽龙
1 版本号更改，2002，现场测试版本

************************************************************ 	
20131011 吴尽龙
1 看质疑逻辑，更改细节部分7处，详见源程序，可搜索以下内容找到
modified by wujinlng 20131011

************************************************************ 	
20131017-1120 吴尽龙
1 修改版本，开发版本a.2.0.2，每次更改+1
2 修改ARM-Laser0xCA协议
3 修改串口中断
4 压缝窄条新逻辑
5 激光通信由232改成422
6 针对现场问题，解决问题
7 8563死机问题
8 增加SD卡功能，未测试

************************************************************ 	
20131121 吴尽龙
1 增加车型速度修正


************************************************************ 	
20131203 吴尽龙
1 在组帧时，重新计算车速
2 0轴或1轴组2轴时，增加轴速赋值
3 车辆无用ZT判断条件，改成if( p_ucLaserVehicleIX )，非0车道即进行判断
4 发波形，激光发送0408


************************************************************ 	
20131208 吴尽龙
1 车型速度修正最高80
2 算法中修改WbNum--，并增加保护


************************************************************ 	
20131230 吴尽龙
1 测试中发现bug，uint16	l_u16AxleZTIx = 0;				// ZT索引
将uint8改成uint16


************************************************************ 	
20140210 吴尽龙
心跳机制，心跳协议中
#if NET_HEARTBEAT_EN > 0
	   	// 心跳
		case ADJ_HEARTBEAT:
将l_u8Tempi改成l_u8TempVar，根据接收信息的端口号进行相应端口的计时

心跳机制一直没有投入使用，故没有进行详细测试



************************************************************ 	
20140303 王艮化  高速预检项目
增加线圈模式窄条逻辑，兼容激光模式、不同布局等

3月25日：添加两个功能 1 压三边和两车压四边的情况区分，主要是在压三边函数和第一排、第二排窄条处理中 2 压三边出现以下问题当第一轴正常出轴，第二轴出现第一排和第二排都对，但第三排变为右边两个首先成对时造成将第二轴看成斜着走，出现两个车道分别有一个轴，在抛车和异常处理2中添加程序
3月26日：延时抛车，如果有一个车大于1轴，并且时间与当前时间差3秒抛车；异常处理1中，增加如果等待区和质疑区中都没有，看所属车道是否有车进行抛轴判断，在异常处理抛轴处添加；异常处理1中增加如下情况，第一排和最后一排都只有1根触发并且不在同一列，造成第一排窄条丢失问题，在异常处理抛轴处添加
3月27日：在异常处理1中增加只有一根窄条触发大于阈值后没有组轴则丢掉，处理情况：压三边情况下，第一轴判为左边车道，这时最后一排右侧窄条会在等待区，第二轴如果判为斜着走，在循环处理中会进入异常处理1中，将第二轴的在等待区的与保留的最后一排窄条同列的窄条清掉，造成窄条无法归入正确轴中；增加如果第一轴产生并有分车标记，同时上一车最后一轴已抛则强制抛车，在第一排窄条匹配处理中和一排窄条模式的左侧和右侧窄条处理中；针对一排窄条模式，左侧窄条单车单条处理，最后一轴在异常处理2中进行抛轴
3月31日：加入逆向出车逻辑后，修改抛车函数，传入参数加入逆向还是正向出车标记，逆向、正向出车使能，初始均使能，在抛轴处不使能不出轴的，在抛车时全部使能。
4月1日：发现车辆并行时出现一个单车一个压三边，原因是压三边函数新建轴后当前处理排数为及时更新；发现有辆四轴车出三轴，发现是由于中断发抖时间过长，认为是抖动，滤除了。任务1机制文件是将while循环换到各子函数中，采用吴尽龙修改的架构，压三边有时间最长的修改为时间最近的是否匹配，抛轴处对向逻辑使能关添加等待区、质疑区和怀疑区清零操作，优化文件夹中没有进行修改。
        注意：防抖阈值、异常处理1阈值可能导致窄条丢失。
4月2日：异常处理1中是否需要添加最后1排触发窄条的时间要比前两排早才行的条件？在任务机制1中加。添加两根窄条规定方向出车，增加两根窄条逆向出车抛车处理部分，任务6轴数加的地方增加两根窄条处理。添加逆向出车文件添加了结合线圈状态判断2根窄条逻辑出车部分，在线圈逻辑函数中。
4月3日：添加逆向出车文件，抛轴处窄条处理使能条件2根窄条不处理。左侧单车单条最后一轴处理，修改了对应车道和窄条号。增加7轴以上强制抛车，在主任务抛车处理部分。分车标记必须前车大于一轴才使用，在分车处。在抛车模块初始化2根方向使能。需要线圈符合要求才能正常出车。
        任务1机制优化，左侧单车单条最后一轴处理，修改了对应车道和窄条号。增加7轴以上强制抛车，在主任务抛车处理部分。分车标记必须前车大于一轴才使用，防止误分车。添加参数初始化函数。
4月4日：任务1机制优化：阈值判断处改为大于和小于两种处理情况。注意：当出现一个轴只压三排的前两排时，会可能出现逆向出车而正向不出车的情况。
4月5日：添加修改协议
4月8日：修改字节长度位，测试8开头指令，添加其余指令，部分指令只有框架还未细化。
4月9日：轴重信息中添加是否增加波形使能
4月10日：添加IO测试协议和状态帧查询，激光逻辑没有添加。
4月15日：修改了异常处理1和2的参数传递，用一个指针数组传递，最后一排抛轴参数Address[8],应该为Address[9]，抛车函数、压三边函数都改为指针数组作为参数，读FPGA时间放在窄条处理过后再读一边。
4月16日：修改抛轴函数和矩阵元素个数函数，将传递的形参在函数开头赋给函数定义的新指针函数，然后调用。任务堆栈控件设置为单独设置的宏定义。压三边函数中Flag先读地址，然后再赋值为-1.将顺义王平改的算法移进去。
4月17日：在find8函数找到位置处加限制，不能是255，在压三边中匹配处有一个数组坐标应减1，原来写为了加1.
        加激光交调文件中对向使能逻辑关上方求变换时改为l_u8temp，原为l_u16temp.在匹配窄条寻找函数中改为l_n8Flag==1进入条件。压三边中l_u32Time==0改为l_u8Position == 3*CHL_SAVEVEH，发送数据带波形使能参数写错了，改正。任务6修改了结果赋值给VehiclePerChl参数，抛车处添加赋值加速度和轴间距等，在跨道处添加抛轴标记清零和清车操作。在抛车时的FreDeal函数轴索引重新按冒泡大小排序。
4月18日：在异常处理2中修改有未抛轴轴只有不到3根窄条时丢弃该轴为不丢弃，而是直接清空该窄条然后置抛轴标记为1.在斜走位置加请对应轴的抛轴标记和清车操作。Setup结构体大小计算错误，应是剩余2897个。对第一个问题再次更改为只要有未抛轴就抛，在抛轴处理中增加根据包含的窄条数判断是否抛轴。末排匹配有车处理中有轴未抛处理排数大于等于阈值就抛，阈值显示1表示满足有一根就可以抛。车型整体修正帧中字节长度为写错，应为31写为21.车型速度修正改为每5一个速度段，原来是每1一个速度段。在任务6中轴数加1的地方增加条件当前轴不能为负1.
4月21日：在任务6增加速度赋值，第一排窄条匹配处理中分车标记匹配时对2取模条件应是取模后等于0，原为就是取模已改，在一排窄条模式左窄条处理中有相同问题，在第一排窄条匹配处理中分车标记匹配时会抛车，条件改为有车且轴大于等于0，原为轴大于0.，第一排窄条匹配处理中分车标记跨道下改为相邻两个线圈都有分车标记。查询零点内码进行了分激光和线圈，FPGA参数初始化函数形式进行了改变。精简warning，延时抛车改为有至少两个轴并且后置线圈未触发，延时5秒车。在主逻辑车道异常抛车处理部分添加只有1轴并且线圈未触发下延长3米抛车。添加发波形机制在主逻辑中。
4月22日：在第一排窄条匹配处理中，分车标记匹配后改为条件有车且大于一轴进行分车，否则进入else，else中当前轴有等于0改为++。添加测试指令输出IO设置。在线圈任务和激光任务中添加发波形机制。
4月23日：激光逻辑中窄条排数改为参数设置，线圈逻辑中在压三边判断中出现011时增加了一个条件处理。修改测试协议。
4月24日：添加旧高速预检协议。添加串口发送协议。UDP协议优化，在连接完成之后不能直接没有目的IP和端口号就发送数据，这样会造成之后接收和发送均不能实现，可采取以下措施：1 发送时必须要带有目的IP和端口号， 2 在SetSocket之前设置广播模式然后发送没有目的IP的数据，然后在SetSocket之后需要带有目的IP和端口号。一排窄条单车压左侧窄条主逻辑处理中增加等待区不等于-1的条件。
4月25日：修改超级指令位置，在一轴抛车处理处，分一排窄条和其他模式两个抛车条件。在两轴以上强制抛车处理部分，分一排窄条和其他模式两个抛车条件。在抛车函数中增加每个车道抛什么方向的车。
4月28日：在抛车逻辑中增加和优化了压缝窄条的处理。
4月29日：添加转发系统参数使能，任务6中修改窄条间距的赋值。原激光逻辑车道宽度用参数替代，原激光逻辑压缝窄条处理使能用参数替代
4月30日：修改激光左右侧位置赋值，增加车道间宽度通讯协议
5月4日：增加注释，增加调试信息输出
5月5日：优化调试信息，在抛车和抛轴处添加调试信息，在发送车辆数据处增加串口输出车辆数据，车辆信息组帧中串口输出不加波形，串口输出用串口5，增加串口可进行协议通信，由上传方式控制，增加学习算法，轴索引排序删除，存在轴索引最大后会从零开始排序错误的问题。
5月6日：修改胶垫状态在更新指令中的赋值，增加学习算法参数赋值，修改标定上传数据协议，去掉车速，增加轴速，上传车辆数据81帧数据长度原为+12，改为+13,81指令成功不重发，失败重发，函数增加说明，删除wj_Printf的使用，优化波形发送变量大小。
5月7日：增加线圈IO调试信息，loopIn读IO前初始化为0，增加SD卡存储用buff，增加SD卡任务，吴尽龙后增加了信号量数量
5月8日：没有修改。开始使用吴尽龙改的
5月9日：学习算法设置后回复响应修改，增加学习算法两套增益，优化学习算法收敛于最小限，王平修改了算法
5月30日：修改了一排窄条处理分车匹配部分
6月3日：修改了串口通信，串口5中断处理。匹配处理函数中匹配条件加上了SUB，解决可能窄条中断下称时间晚的先上中断，注意匹配阈值的设置，隔一列的*2/3，在任务6输出的调试信息更改了位置
6月4日：修改一排模式，右侧窄条找匹配窄条时，看重量加上两个重量差的比较，比较不出来就选两个匹配结果中时间出现较早的，在右侧、左侧窄条处理函数中和主逻辑单车单条中条件了调试信息输出，重启04子指令增加重启，超级指令修改参数后重启，修正了输出IO
6月9日：修改了串口2进行通信和传数据，在参数设置中增加范围限制



************************************************************ 	
20140709 吴尽龙
1 增加非现场执法协议
2 移植备用线圈逻辑，增加ARM收不到数据，30min内使用线圈



************************************************************ 	
20140728 吴尽龙
1 在激光模式线圈中，增加开启和关闭零点跟踪
2 非现场执法协议中，抓拍指令发送时直接使用命令号0x93
3 高速预检协议中车道号，激光模式和线圈模式不一致，增加激光模式下协议车道号赋值


************************************************************ 	
20140804 王艮化 吴尽龙
1 将房山程序汇总到高速预检程序
2 线圈变化时的位置，改成，仅变化线圈才增加位置


************************************************************ 	
20140805 王艮化
线圈模式增加是否进行零点跟踪













